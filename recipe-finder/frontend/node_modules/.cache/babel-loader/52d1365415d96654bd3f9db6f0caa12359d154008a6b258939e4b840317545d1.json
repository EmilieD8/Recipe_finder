{"ast":null,"code":"var _jsxFileName = \"/Users/emilie/Programmation/Recipe_finder/recipe-finder/frontend/src/pages/Home/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from '../../components/SearchBar/SearchBar.tsx';\nimport RecipeList from '../../components/RecipeList/RecipeList.tsx';\nimport { fetchRecipesByIngredients, fetchRecipesById } from '../../services/api.tsx';\nimport RecipeCard from '../../components/RecipeCard/RecipeCard.tsx';\nimport Filter from '../../components/Filter/Filter.tsx';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [exampleRecipes, setExampleRecipes] = useState([]);\n  const [filterCriteria, setFilterCriteria] = useState('');\n  useEffect(() => {\n    const fetchExampleRecipes = async () => {\n      try {\n        const recipe1 = await fetchRecipesById(1);\n        const recipe2 = await fetchRecipesById(2);\n        const recipe3 = await fetchRecipesById(3);\n        setExampleRecipes([recipe1, recipe2, recipe3]);\n      } catch (err) {\n        setError('Error fetching example recipes');\n      }\n    };\n    fetchExampleRecipes();\n  }, []);\n  useEffect(() => {\n    if (filterCriteria) {\n      let sortedRecipes = [...recipes];\n      if (filterCriteria === 'time') {\n        sortedRecipes.sort((a, b) => a.prepTime - b.prepTime);\n      } else if (filterCriteria === 'alphabetically') {\n        sortedRecipes.sort((a, b) => a.name.localeCompare(b.name));\n      } else if (filterCriteria === 'default') {\n        sortedRecipes.sort((a, b) => a.id - b.id);\n      }\n      if (JSON.stringify(sortedRecipes) !== JSON.stringify(recipes)) {\n        setRecipes(sortedRecipes);\n      }\n    }\n  }, [filterCriteria, recipes]);\n  const handleSearch = async query => {\n    setRecipes([]);\n    setLoading(true);\n    setError('');\n    if (!query) {\n      //fetch all recipes\n      try {\n        const response = await fetchRecipesByIngredients('');\n        setRecipes(response);\n      } catch (err) {\n        setError('Sorry, we could not fetch all recipes.');\n      } finally {\n        setLoading(false);\n      }\n      return;\n    }\n    if (/^[\\d]+$/.test(query)) {\n      // Get recipe by id\n      try {\n        const response = await fetchRecipesById(query);\n        setRecipes([response]);\n      } catch (err) {\n        setError('Sorry, that recipe does not exist.');\n      } finally {\n        setLoading(false);\n      }\n    } else if (/^[a-zA-Z, ]+$/.test(query)) {\n      // Get recipe by ingredients\n      try {\n        const response = await fetchRecipesByIngredients(query);\n        setRecipes(response);\n      } catch (err) {\n        setError('Sorry, we could not find any recipes with these ingredients.');\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      setError('Sorry, this is not a valid term, use either ingredients or the recipe number.');\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"presentation\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to your plant-based life!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Here you can find various vegan recipes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You can use our search bar to look by ingredients, or by recipe number directly.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        onFilterChange: setFilterCriteria\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\",\n        children: \"Searching...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RecipeList, {\n        recipes: recipes,\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Examples\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"A few examples of our recipes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), exampleRecipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example-recipe\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: recipe.image,\n            alt: recipe.name,\n            className: \"recipe-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RecipeCard, {\n            recipe: recipe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"5K0puIpqkwv3FN4QHyiR4IhQ/FU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","RecipeList","fetchRecipesByIngredients","fetchRecipesById","RecipeCard","Filter","jsxDEV","_jsxDEV","Home","_s","recipes","setRecipes","loading","setLoading","error","setError","exampleRecipes","setExampleRecipes","filterCriteria","setFilterCriteria","fetchExampleRecipes","recipe1","recipe2","recipe3","err","sortedRecipes","sort","a","b","prepTime","name","localeCompare","id","JSON","stringify","handleSearch","query","response","test","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onFilterChange","map","recipe","index","src","image","alt","_c","$RefreshReg$"],"sources":["/Users/emilie/Programmation/Recipe_finder/recipe-finder/frontend/src/pages/Home/Home.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchBar from '../../components/SearchBar/SearchBar.tsx';\nimport RecipeList from '../../components/RecipeList/RecipeList.tsx';\nimport { fetchRecipesByIngredients, fetchRecipesById } from '../../services/api.tsx';\nimport RecipeCard from '../../components/RecipeCard/RecipeCard.tsx';\nimport Filter from '../../components/Filter/Filter.tsx';\nimport { Recipe } from '../../type.tsx';\nimport './Home.css';\n\ninterface HomeProps {\n  recipes: Recipe[];\n  query: string;\n}\n\nconst Home: React.FC<HomeProps> = () => {\n  const [recipes, setRecipes] = useState<Recipe[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string>('');\n  const [exampleRecipes, setExampleRecipes] = useState<Recipe[]>([]);\n  const [filterCriteria, setFilterCriteria] = useState<string>('');\n\n  useEffect(() => {\n    const fetchExampleRecipes = async () => {\n      try {\n        const recipe1 = await fetchRecipesById(1);\n        const recipe2 = await fetchRecipesById(2);\n        const recipe3 = await fetchRecipesById(3);\n        setExampleRecipes([recipe1, recipe2, recipe3]);\n      } catch (err) {\n        setError('Error fetching example recipes');\n      }\n    };\n\n    fetchExampleRecipes();\n  }, []);\n\n  useEffect(() => {\n    if (filterCriteria) {\n      let sortedRecipes = [...recipes];\n  \n      if (filterCriteria === 'time') {\n        sortedRecipes.sort((a, b) => a.prepTime - b.prepTime);\n      } else if (filterCriteria === 'alphabetically') {\n        sortedRecipes.sort((a, b) => a.name.localeCompare(b.name));\n      } else if (filterCriteria === 'default') {\n        sortedRecipes.sort((a, b) => a.id - b.id);\n      }\n        if (JSON.stringify(sortedRecipes) !== JSON.stringify(recipes)) {\n        setRecipes(sortedRecipes);\n      }\n    }\n  }, [filterCriteria, recipes]);\n\n  const handleSearch = async (query: string) => {\n    setRecipes([]);\n    setLoading(true);\n    setError('');\n    if (!query) { //fetch all recipes\n      try {\n        const response = await fetchRecipesByIngredients('');\n        setRecipes(response);\n      } catch (err) {\n        setError('Sorry, we could not fetch all recipes.');\n      } finally {\n        setLoading(false);\n      }\n      return;\n    }\n    \n    if (/^[\\d]+$/.test(query)) { // Get recipe by id\n      try {\n        const response = await fetchRecipesById(query);\n        setRecipes([response]);\n      } catch (err) {\n        setError('Sorry, that recipe does not exist.');\n      } finally {\n        setLoading(false);\n      }\n    } else if (/^[a-zA-Z, ]+$/.test(query)) { // Get recipe by ingredients\n      try {\n        const response = await fetchRecipesByIngredients(query);\n        setRecipes(response);\n      } catch (err) {\n        setError('Sorry, we could not find any recipes with these ingredients.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    else {\n      setError('Sorry, this is not a valid term, use either ingredients or the recipe number.');\n      setLoading(false);\n    }\n  };\n\n  return (\n    <main>\n      <div className=\"presentation\">\n        <h1>Welcome to your plant-based life!</h1>\n        <h2>Here you can find various vegan recipes.</h2>\n        <h2>You can use our search bar to look by ingredients, or by recipe number directly.</h2>\n      </div>\n      <div>\n        <SearchBar onSearch={handleSearch} />\n        <Filter onFilterChange={setFilterCriteria} />\n        {loading && <div className=\"spinner\">Searching...</div>}\n        <RecipeList recipes={recipes} error={error} />\n        <div className=\"Examples\">\n          <p>A few examples of our recipes:</p>\n          {exampleRecipes.map((recipe, index) => (\n            <div key={index} className=\"example-recipe\">\n              <img src={recipe.image} alt={recipe.name} className=\"recipe-image\" />\n              <RecipeCard recipe={recipe} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
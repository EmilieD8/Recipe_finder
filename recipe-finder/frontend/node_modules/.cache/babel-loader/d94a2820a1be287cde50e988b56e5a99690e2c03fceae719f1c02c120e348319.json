{"ast":null,"code":"var _jsxFileName = \"/Users/emilie/Programmation/Recipe_finder/recipe-finder/frontend/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport RecipeList from '../components/RecipeList';\nimport RecipeModal from '../components/RecipeModal';\nimport { fetchRecipesByIngredients } from '../services/api';\nimport { fetchRecipeById } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\n  const handleSearch = async query => {\n    setLoading(true);\n    setError('');\n    console.log(\"Search initiated with query:\", query); // Log the search query\n    if (/^\\d+$/.test(query)) {\n      console.log(\"The query contains only numbers.\");\n    } else if (/^[a-zA-Z]+$/.test(query)) {\n      console.log(\"The query contains only letters.\");\n    } else {\n      console.log(\"The query contains a mix of characters or unsupported symbols.\");\n    }\n    // try {\n    //   const response = await fetchRecipesByIngredients(query);\n    //   console.log(\"Fetched recipes:\", response);  // Log the response from the API\n    //   setRecipes(response);\n    // } catch (err) {\n    //   setError('Error fetching recipes by ingredient');\n    // } finally {\n    //   setLoading(false);\n    // }\n  };\n\n  // const handleRecipeClick = async (id) => {\n  //   setLoading(true);\n  //   setError('');\n  //   try {\n  //     // Use the API function to fetch recipe details by ID\n  //     const recipe = await fetchRecipeById(id);\n  //     setSelectedRecipe(recipe);\n  //   } catch (err) {\n  //     setError('Error fetching recipe details');\n  //   } finally {\n  //     setLoading(false);\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(RecipeList, {\n      recipes: recipes,\n      onRecipeClick: handleSearcg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecipeModal, {\n      recipe: selectedRecipe,\n      onClose: () => setSelectedRecipe(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"1y37Geqm4YwgIZ5tOeCiu5hx8fA=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","SearchBar","RecipeList","RecipeModal","fetchRecipesByIngredients","fetchRecipeById","jsxDEV","_jsxDEV","Home","_s","recipes","setRecipes","loading","setLoading","error","setError","selectedRecipe","setSelectedRecipe","handleSearch","query","console","log","test","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","onRecipeClick","handleSearcg","recipe","onClose","_c","$RefreshReg$"],"sources":["/Users/emilie/Programmation/Recipe_finder/recipe-finder/frontend/src/pages/Home.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport RecipeList from '../components/RecipeList';\nimport RecipeModal from '../components/RecipeModal';\nimport { fetchRecipesByIngredients } from '../services/api';\nimport { fetchRecipeById } from '../services/api';\n\nconst Home = () => {\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\n\n  const handleSearch = async (query) => {\n\n    setLoading(true);\n    setError('');\n    console.log(\"Search initiated with query:\", query);  // Log the search query\n    if (/^\\d+$/.test(query)) {\n      console.log(\"The query contains only numbers.\");\n    } else if (/^[a-zA-Z]+$/.test(query)) {\n      console.log(\"The query contains only letters.\");\n    } else {\n      console.log(\"The query contains a mix of characters or unsupported symbols.\");\n    }\n    // try {\n    //   const response = await fetchRecipesByIngredients(query);\n    //   console.log(\"Fetched recipes:\", response);  // Log the response from the API\n    //   setRecipes(response);\n    // } catch (err) {\n    //   setError('Error fetching recipes by ingredient');\n    // } finally {\n    //   setLoading(false);\n    // }\n  };\n\n  // const handleRecipeClick = async (id) => {\n  //   setLoading(true);\n  //   setError('');\n  //   try {\n  //     // Use the API function to fetch recipe details by ID\n  //     const recipe = await fetchRecipeById(id);\n  //     setSelectedRecipe(recipe);\n  //   } catch (err) {\n  //     setError('Error fetching recipe details');\n  //   } finally {\n  //     setLoading(false);\n  //   }\n  // };\n\n  return (\n    <div>\n      <SearchBar onSearch={handleSearch} />\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      <RecipeList recipes={recipes} onRecipeClick={handleSearcg} />\n      <RecipeModal\n        recipe={selectedRecipe}\n        onClose={() => setSelectedRecipe(null)}\n      />\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,yBAAyB,QAAQ,iBAAiB;AAC3D,SAASC,eAAe,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMkB,YAAY,GAAG,MAAOC,KAAK,IAAK;IAEpCN,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IACZK,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,KAAK,CAAC,CAAC,CAAE;IACrD,IAAI,OAAO,CAACG,IAAI,CAACH,KAAK,CAAC,EAAE;MACvBC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IACjD,CAAC,MAAM,IAAI,aAAa,CAACC,IAAI,CAACH,KAAK,CAAC,EAAE;MACpCC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IACjD,CAAC,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,gEAAgE,CAAC;IAC/E;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA,CAACN,SAAS;MAACuB,QAAQ,EAAEN;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACpChB,OAAO,iBAAIL,OAAA;MAAAgB,QAAA,EAAG;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC5Bd,KAAK,iBAAIP,OAAA;MAAAgB,QAAA,EAAIT;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBrB,OAAA,CAACL,UAAU;MAACQ,OAAO,EAAEA,OAAQ;MAACmB,aAAa,EAAEC;IAAa;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7DrB,OAAA,CAACJ,WAAW;MACV4B,MAAM,EAAEf,cAAe;MACvBgB,OAAO,EAAEA,CAAA,KAAMf,iBAAiB,CAAC,IAAI;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnB,EAAA,CAvDID,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAyDV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
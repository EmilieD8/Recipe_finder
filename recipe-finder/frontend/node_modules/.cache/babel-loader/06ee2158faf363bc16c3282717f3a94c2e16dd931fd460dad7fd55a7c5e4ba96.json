{"ast":null,"code":"var _jsxFileName = \"/Users/emilie/Programmation/Recipe_finder/recipe-finder/frontend/src/pages/Home/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchBar from '../../components/SearchBar/SearchBar';\nimport RecipeList from '../../components/RecipeList/RecipeList';\nimport './Home.css';\nimport { fetchRecipesByIngredients } from '../../services/api';\nimport { fetchRecipesById } from '../../services/api';\nimport RecipeCard from '../../components/RecipeCard/RecipeCard';\nimport { useEffect } from 'react';\nimport Filter from '../../components/Filter/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [exampleRecipes, setExampleRecipes] = useState([]);\n  const [filterCriteria, setFilterCriteria] = useState(null);\n  useEffect(() => {\n    const fetchExampleRecipes = async () => {\n      try {\n        const recipe1 = await fetchRecipesById(1);\n        const recipe2 = await fetchRecipesById(2);\n        const recipe3 = await fetchRecipesById(3);\n        setExampleRecipes([recipe1, recipe2, recipe3]);\n      } catch (err) {\n        setError('Error fetching example recipes');\n      }\n    };\n    fetchExampleRecipes();\n  }, []);\n  useEffect(() => {\n    if (filterCriteria) {\n      // Add filter logic here based on the filterCriteria state\n      const filteredRecipes = recipes.sort(recipe => recipe.dietaryRestrictions.includes(filterCriteria) // Adjust according to your data structure\n      );\n      setExampleRecipes(filteredRecipes);\n    }\n  }, [filterCriteria, exampleRecipes]);\n  const handleSearch = async query => {\n    setRecipes([]);\n    setLoading(true);\n    setError('');\n    if (!query) {\n      setError('Please enter a valid search term.');\n      setLoading(false);\n      return;\n    }\n    if (/^[\\d]+$/.test(query)) {\n      // Get recipe by id\n      try {\n        const response = await fetchRecipesById(query);\n        setRecipes([response]);\n      } catch (err) {\n        setError('Sorry, that recipe does not exist.');\n      } finally {\n        setLoading(false);\n      }\n    } else if (/^[a-zA-Z, ]+$/.test(query)) {\n      // Get recipe by ingredients\n      try {\n        const response = await fetchRecipesByIngredients(query);\n        setRecipes(response);\n      } catch (err) {\n        setError('Sorry, we could not find any recipes with these ingredients.');\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      setError('Sorry, this is not a valid term.');\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"presentation\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to a plant-based life!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Here you can find various vegan recipes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You can use our search bar to look by ingredients, or by recipe number directly.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        onFilterChange: setFilterCriteria\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\",\n        children: \"Searching...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RecipeList, {\n        recipes: recipes,\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Examples\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"A few examples of our recipes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), exampleRecipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example-recipe\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: recipe.image,\n            alt: recipe.name,\n            className: \"recipe-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RecipeCard, {\n            recipe: recipe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"P5WVp4RRu09S8JRgQIw8Xr0ccik=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","SearchBar","RecipeList","fetchRecipesByIngredients","fetchRecipesById","RecipeCard","useEffect","Filter","jsxDEV","_jsxDEV","Home","_s","recipes","setRecipes","loading","setLoading","error","setError","exampleRecipes","setExampleRecipes","filterCriteria","setFilterCriteria","fetchExampleRecipes","recipe1","recipe2","recipe3","err","filteredRecipes","sort","recipe","dietaryRestrictions","includes","handleSearch","query","test","response","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onFilterChange","map","index","src","image","alt","name","_c","$RefreshReg$"],"sources":["/Users/emilie/Programmation/Recipe_finder/recipe-finder/frontend/src/pages/Home/Home.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport SearchBar from '../../components/SearchBar/SearchBar';\nimport RecipeList from '../../components/RecipeList/RecipeList';\nimport './Home.css';\nimport { fetchRecipesByIngredients } from '../../services/api';\nimport { fetchRecipesById } from '../../services/api';\nimport RecipeCard from '../../components/RecipeCard/RecipeCard';\nimport { useEffect } from 'react';\nimport Filter from '../../components/Filter/Filter';\n\nconst Home = () => {\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [exampleRecipes, setExampleRecipes] = useState([]);\n  const [filterCriteria, setFilterCriteria] = useState(null);\n\n  useEffect(() => {\n    const fetchExampleRecipes = async () => {\n      try {\n        const recipe1 = await fetchRecipesById(1);\n        const recipe2 = await fetchRecipesById(2);\n        const recipe3 = await fetchRecipesById(3);\n        setExampleRecipes([recipe1, recipe2, recipe3]);\n      } catch (err) {\n        setError('Error fetching example recipes');\n      }\n    };\n\n    fetchExampleRecipes();\n  }, []);\n\n  useEffect(() => {\n    if (filterCriteria) {\n      // Add filter logic here based on the filterCriteria state\n      const filteredRecipes = recipes.sort((recipe) =>\n        recipe.dietaryRestrictions.includes(filterCriteria) // Adjust according to your data structure\n      );\n      setExampleRecipes(filteredRecipes);\n    }\n  }, [filterCriteria, exampleRecipes]);\n\n  const handleSearch = async (query) => {\n    setRecipes([]);\n    setLoading(true);\n    setError('');\n    if (!query) {\n      setError('Please enter a valid search term.');\n      setLoading(false);\n      return;\n    }\n    if (/^[\\d]+$/.test(query)) { // Get recipe by id\n      try {\n        const response = await fetchRecipesById(query);\n        setRecipes([response]);\n      } catch (err) {\n        setError('Sorry, that recipe does not exist.');\n      } finally {\n        setLoading(false);\n      }\n    } else if (/^[a-zA-Z, ]+$/.test(query)) { // Get recipe by ingredients\n      try {\n        const response = await fetchRecipesByIngredients(query);\n        setRecipes(response);\n      } catch (err) {\n        setError('Sorry, we could not find any recipes with these ingredients.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    else {\n      setError('Sorry, this is not a valid term.');\n      setLoading(false);\n    }\n  };\n\n  return (\n    <main>\n      <div className=\"presentation\">\n        <h1>Welcome to a plant-based life!</h1>\n        <h2>Here you can find various vegan recipes.</h2>\n        <h2>You can use our search bar to look by ingredients, or by recipe number directly.</h2>\n      </div>\n      <div>\n        <SearchBar onSearch={handleSearch} />\n        <Filter onFilterChange={setFilterCriteria} />\n        {loading && <div className=\"spinner\">Searching...</div>}\n        <RecipeList recipes={recipes} error={error} />\n        <div className=\"Examples\">\n          <p>A few examples of our recipes:</p>\n          {exampleRecipes.map((recipe, index) => (\n            <div key={index} className=\"example-recipe\">\n              <img src={recipe.image} alt={recipe.name} className=\"recipe-image\" />\n              <RecipeCard recipe={recipe} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
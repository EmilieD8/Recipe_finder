{"ast":null,"code":"var _jsxFileName = \"/Users/emilie/Programmation/Recipe_finder/recipe-finder/frontend/src/components/Filter/Filter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filter = ({\n  recipes\n}) => {\n  _s();\n  const [sortedRecipes, setSortedRecipes] = useState(recipes);\n  const sortRecipes = criteria => {\n    let sortedArray = [];\n    if (criteria === 'sort by prep time') {\n      sortedArray = [...recipes].sort((a, b) => a.prepTime - b.prepTime);\n    } else if (criteria === 'sort alphabetically') {\n      sortedArray = [...recipes].sort((a, b) => a.name.localeCompare(b.name));\n    }\n    setSortedRecipes(sortedArray);\n    return sortedArray;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sortRecipes('sort by prep time'),\n      children: \"Sort by Prep Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sortRecipes('sort alphabetically'),\n      children: \"Sort Alphabetically\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(Filter, \"JpUDqeOo73RodV7SBssqESYFgAg=\");\n_c = Filter;\nexport default Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Filter","recipes","_s","sortedRecipes","setSortedRecipes","sortRecipes","criteria","sortedArray","sort","a","b","prepTime","name","localeCompare","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emilie/Programmation/Recipe_finder/recipe-finder/frontend/src/components/Filter/Filter.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Filter = ({ recipes }) => {\n    const [sortedRecipes, setSortedRecipes] = useState(recipes);\n\n    const sortRecipes = (criteria) => {\n        let sortedArray = [];\n        if (criteria === 'sort by prep time') {\n            sortedArray = [...recipes].sort((a, b) => a.prepTime - b.prepTime);\n        } else if (criteria === 'sort alphabetically') {\n            sortedArray = [...recipes].sort((a, b) => a.name.localeCompare(b.name));\n        }\n        setSortedRecipes(sortedArray);\n        return sortedArray;\n    };\n\n    return (\n        <div>\n            <button onClick={() => sortRecipes('sort by prep time')}>Sort by Prep Time</button>\n            <button onClick={() => sortRecipes('sort alphabetically')}>Sort Alphabetically</button>\n        </div>\n    );\n};\n\nexport default Filter;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAACI,OAAO,CAAC;EAE3D,MAAMI,WAAW,GAAIC,QAAQ,IAAK;IAC9B,IAAIC,WAAW,GAAG,EAAE;IACpB,IAAID,QAAQ,KAAK,mBAAmB,EAAE;MAClCC,WAAW,GAAG,CAAC,GAAGN,OAAO,CAAC,CAACO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,QAAQ,GAAGD,CAAC,CAACC,QAAQ,CAAC;IACtE,CAAC,MAAM,IAAIL,QAAQ,KAAK,qBAAqB,EAAE;MAC3CC,WAAW,GAAG,CAAC,GAAGN,OAAO,CAAC,CAACO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACG,IAAI,CAACC,aAAa,CAACH,CAAC,CAACE,IAAI,CAAC,CAAC;IAC3E;IACAR,gBAAgB,CAACG,WAAW,CAAC;IAC7B,OAAOA,WAAW;EACtB,CAAC;EAED,oBACIR,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAAC,mBAAmB,CAAE;MAAAS,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnFpB,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAAC,qBAAqB,CAAE;MAAAS,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtF,CAAC;AAEd,CAAC;AAACjB,EAAA,CApBIF,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AAsBZ,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
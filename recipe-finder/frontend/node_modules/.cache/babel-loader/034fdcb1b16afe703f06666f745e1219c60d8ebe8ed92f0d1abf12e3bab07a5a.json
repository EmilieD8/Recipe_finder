{"ast":null,"code":"const API_BASE = 'http://localhost:5000';\nexport const fetchRecipesByIngredients = async ingredients => {\n  try {\n    const response = await fetch(`${API_BASE}/recipes?ingredients=${ingredients}`);\n    if (!response.ok) {\n      throw new Error(`Error fetching recipes: ${response.statusText}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error in fetchRecipesByIngredients:\", error);\n    throw error;\n  }\n};\nexport const fetchRecipesById = async id => {\n  try {\n    const response = await fetch(`${API_BASE}/recipes/${id}`);\n    if (!response.ok) {\n      throw new Error(`Error fetching recipe: ${response.statusText}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error in fetchRecipesById:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE","fetchRecipesByIngredients","ingredients","response","fetch","ok","Error","statusText","data","json","error","console","fetchRecipesById","id"],"sources":["/Users/emilie/Programmation/Recipe_finder/recipe-finder/frontend/src/services/api.js"],"sourcesContent":["const API_BASE = 'http://localhost:5000';\n\nexport const fetchRecipesByIngredients = async (ingredients) => {\n  try {\n    const response = await fetch(`${API_BASE}/recipes?ingredients=${ingredients}`);\n    \n    if (!response.ok) {\n      throw new Error(`Error fetching recipes: ${response.statusText}`);\n    }\n    \n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error in fetchRecipesByIngredients:\", error);\n    throw error;\n  }\n};\n\nexport const fetchRecipesById = async (id) => {\n  try {\n    const response = await fetch(`${API_BASE}/recipes/${id}`);\n    \n    if (!response.ok) {\n      throw new Error(`Error fetching recipe: ${response.statusText}`);\n    }\n    \n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error in fetchRecipesById:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAuB;AAExC,OAAO,MAAMC,yBAAyB,GAAG,MAAOC,WAAW,IAAK;EAC9D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,wBAAwBE,WAAW,EAAE,CAAC;IAE9E,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2BH,QAAQ,CAACI,UAAU,EAAE,CAAC;IACnE;IAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC3D,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,MAAOC,EAAE,IAAK;EAC5C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,YAAYa,EAAE,EAAE,CAAC;IAEzD,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0BH,QAAQ,CAACI,UAAU,EAAE,CAAC;IAClE;IAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}